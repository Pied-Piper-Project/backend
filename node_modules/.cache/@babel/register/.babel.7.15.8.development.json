{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Senior Year\\\\CS 370\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Senior Year\\\\CS 370\\\\backend\",\"filename\":\"C:\\\\Senior Year\\\\CS 370\\\\backend\\\\src\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Senior Year\\\\CS 370\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Senior Year\\CS 370\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Senior Year\\CS 370\\backend",
      "filename": "C:\\Senior Year\\CS 370\\backend\\src\\server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Senior Year\\CS 370\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Senior Year\\CS 370\\backend\\src\\server.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Senior Year\\CS 370\\backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Senior Year\\CS 370\\backend\\src\\",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//const mongoose = require('mongoose');\nvar app = (0, _express[\"default\"])(),\n    port = 8000;\napp.use(_bodyParser[\"default\"].json()); //refactor get and post\n\nvar withDB = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(operations, res) {\n    var client, db;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            res.header('Access-Control-Allow-Origin', \"*\");\n            _context.next = 4;\n            return _mongodb.MongoClient.connect('mongodb+srv://aareva2:Lincoln1233@cluster0.gudfj.mongodb.net/ResearchU?retryWrites=true&w=majority');\n\n          case 4:\n            client = _context.sent;\n            db = client.db('ResearchU');\n            _context.next = 8;\n            return operations(db);\n\n          case 8:\n            client.close();\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: \"Error connnecting to db\",\n              error: _context.t0\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n\n  return function withDB(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); //get example with research opportunity given prof name\n\n\napp.get('/api/research/:professor', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(db) {\n                var professorName, researchInfo;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        professorName = req.params.professor;\n                        _context2.next = 3;\n                        return db.collection('research').findOne({\n                          professor: professorName\n                        });\n\n                      case 3:\n                        researchInfo = _context2.sent;\n                        res.status(200).json(researchInfo);\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x5) {\n                return _ref3.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); //get example with student given student name\n\napp.get('/api/student/:studentName', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(db) {\n                var studentName, studentInfo;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        studentName = req.params.studentName;\n                        _context4.next = 3;\n                        return db.collection('studentProfile').findOne({\n                          name: studentName\n                        });\n\n                      case 3:\n                        studentInfo = _context4.sent;\n                        res.status(200).json(studentInfo);\n\n                      case 5:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x8) {\n                return _ref5.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}()); //get example with admin given admin name\n\napp.get('/api/admin/:adminName', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(db) {\n                var adminName, adminInfo;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        adminName = req.params.adminName;\n                        _context6.next = 3;\n                        return db.collection('adminProfile').findOne({\n                          name: adminName\n                        });\n\n                      case 3:\n                        adminInfo = _context6.sent;\n                        res.status(200).json(adminInfo);\n\n                      case 5:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x11) {\n                return _ref7.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref6.apply(this, arguments);\n  };\n}()); //post example to update student year given student name\n\napp.post('/api/studentProfile/:student/edit/year/:value', /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(db) {\n                var studentName, newValue, updatednewField;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        studentName = req.params.student;\n                        newValue = req.params.value;\n                        _context8.next = 4;\n                        return db.collection('studentProfile').updateOne({\n                          name: studentName\n                        }, {\n                          '$set': {\n                            year: newValue\n                          }\n                        });\n\n                      case 4:\n                        _context8.next = 6;\n                        return db.collection('studentProfile').findOne({\n                          name: studentName\n                        });\n\n                      case 6:\n                        updatednewField = _context8.sent;\n                        res.status(200).json(updatednewField);\n\n                      case 8:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8);\n              }));\n\n              return function (_x14) {\n                return _ref9.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref8.apply(this, arguments);\n  };\n}()); //post example to update student grad status given student name\n\napp.post('/api/studentProfile/:student/edit/isGrad', /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(db) {\n                var studentName, studentInfo, oldValue, newValue, updatednewField;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        studentName = req.params.student;\n                        _context10.next = 3;\n                        return db.collection('studentProfile').findOne({\n                          name: studentName\n                        });\n\n                      case 3:\n                        studentInfo = _context10.sent;\n                        oldValue = studentInfo.isGrad;\n                        newValue = !oldValue;\n                        _context10.next = 8;\n                        return db.collection('studentProfile').updateOne({\n                          name: studentName\n                        }, {\n                          '$set': {\n                            isGrad: newValue\n                          }\n                        });\n\n                      case 8:\n                        _context10.next = 10;\n                        return db.collection('studentProfile').findOne({\n                          name: studentName\n                        });\n\n                      case 10:\n                        updatednewField = _context10.sent;\n                        res.status(200).json(updatednewField);\n\n                      case 12:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10);\n              }));\n\n              return function (_x17) {\n                return _ref11.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref10.apply(this, arguments);\n  };\n}()); //post example to update admin school given admin name\n\napp.post('/api/adminProfile/:admin/edit/school/:value', /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(db) {\n                var adminName, newValue, updatednewField;\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        adminName = req.params.admin;\n                        newValue = req.params.value;\n                        _context12.next = 4;\n                        return db.collection('adminProfile').updateOne({\n                          name: adminName\n                        }, {\n                          '$set': {\n                            school: newValue\n                          }\n                        });\n\n                      case 4:\n                        _context12.next = 6;\n                        return db.collection('adminProfile').findOne({\n                          name: adminName\n                        });\n\n                      case 6:\n                        updatednewField = _context12.sent;\n                        res.status(200).json(updatednewField);\n\n                      case 8:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n\n              return function (_x20) {\n                return _ref13.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n\n  return function (_x18, _x19) {\n    return _ref12.apply(this, arguments);\n  };\n}()); //post example to add a language skill given student name\n// app.post('/api/studentProfile/:student/add/experience/language', async(req, res) => {\n//         const languages = req.body;\n//         withDB(async (db) => {\n//             const studentName = req.params.student;\n//             const studentInfo = await db.collection('studentProfile').findOne({name: studentName});\n//             await db.collection('studentProfile').updateOne({name: studentName}, {\n//                 '$set': {\n//                     experience : {language: studentInfo.experience.language.concat(languages)},\n//                 },\n//             });\n//             const updatedStudentInfo = await db.collection('studentProfile').findOne({name: studentName});\n//             res.status(200).json(updatedStudentInfo);\n//         }, res);\n//\n// });\n//get example on research opportunity\n// app.get('/api/research/:professor', async (req, res) =>\n// {\n//     try {\n//         const schoolName = req.params.professor;\n//         console.log(schoolName)\n//         const client = await MongoClient.connect('mongodb+srv://aareva2:Lincoln1233@cluster0.gudfj.mongodb.net/ResearchU?retryWrites=true&w=majority');\n//         const db = client.db('ResearchU')\n//\n//         // console.log(client)\n//         const schoolInfo = await db.collection('research').findOne({professor: schoolName});\n//         console.log(schoolInfo)\n//         res.status(200).json(schoolInfo);\n//\n//         client.close()\n//     } catch(error){\n//         res.status(500).json({message: \"Error connnecting to db\", error});\n//     }\n// });\n// useEffect(() => {\n//     const fetchData = async () => {\n//         const result = await fetch('http://localhost:8000/api/research/Fossati');\n//         const body = await result.json();\n//     }\n// })\n\napp.listen(8000, function () {\n  return console.log('Listening on port 8000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "port",
        "use",
        "bodyParser",
        "json",
        "withDB",
        "operations",
        "res",
        "header",
        "MongoClient",
        "connect",
        "client",
        "db",
        "close",
        "status",
        "message",
        "error",
        "get",
        "req",
        "professorName",
        "params",
        "professor",
        "collection",
        "findOne",
        "researchInfo",
        "studentName",
        "name",
        "studentInfo",
        "adminName",
        "adminInfo",
        "post",
        "student",
        "newValue",
        "value",
        "updateOne",
        "year",
        "updatednewField",
        "oldValue",
        "isGrad",
        "admin",
        "school",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Senior Year\\CS 370\\backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport {MongoClient} from 'mongodb';\r\nimport bodyParser from \"body-parser\";\r\n//const mongoose = require('mongoose');\r\n\r\nconst app = express(),\r\n    port = 8000;\r\n\r\napp.use(bodyParser.json());\r\n\r\n//refactor get and post\r\nconst withDB = async (operations, res) => {\r\n    try {\r\n        res.header('Access-Control-Allow-Origin', \"*\");\r\n        const client = await MongoClient.connect('mongodb+srv://aareva2:Lincoln1233@cluster0.gudfj.mongodb.net/ResearchU?retryWrites=true&w=majority');\r\n        const db = client.db('ResearchU');  \r\n\r\n        await operations(db);\r\n\r\n        client.close();\r\n    } catch(error){\r\n        res.status(500).json({message: \"Error connnecting to db\", error});\r\n    }\r\n}\r\n//get example with research opportunity given prof name\r\napp.get('/api/research/:professor', async (req, res) =>\r\n{\r\n        withDB(async (db) => {\r\n            const professorName = req.params.professor;\r\n\r\n            const researchInfo = await db.collection('research').findOne({professor: professorName});\r\n            res.status(200).json(researchInfo);\r\n\r\n        }, res);\r\n});\r\n\r\n//get example with student given student name\r\napp.get('/api/student/:studentName', async (req, res) =>\r\n{\r\n        withDB(async (db) => {\r\n            const studentName = req.params.studentName;\r\n\r\n            const studentInfo = await db.collection('studentProfile').findOne({name: studentName});\r\n            res.status(200).json(studentInfo);\r\n\r\n        }, res);\r\n});\r\n\r\n//get example with admin given admin name\r\napp.get('/api/admin/:adminName', async (req, res) =>\r\n{\r\n\r\n        withDB(async(db) => {\r\n            const adminName = req.params.adminName;\r\n\r\n            const adminInfo = await db.collection('adminProfile').findOne({name: adminName});\r\n            res.status(200).json(adminInfo);\r\n\r\n        }, res);\r\n});\r\n\r\n//post example to update student year given student name\r\napp.post('/api/studentProfile/:student/edit/year/:value', async(req, res) => {\r\n        withDB(async (db) => {\r\n            const studentName = req.params.student;\r\n            const newValue = req.params.value;\r\n\r\n            await db.collection('studentProfile').updateOne({name: studentName}, {\r\n                '$set': {\r\n                    year: newValue,\r\n                },\r\n            });\r\n            const updatednewField = await db.collection('studentProfile').findOne({name: studentName});\r\n\r\n        res.status(200).json(updatednewField);\r\n        }, res);\r\n});\r\n//post example to update student grad status given student name\r\napp.post('/api/studentProfile/:student/edit/isGrad', async(req, res) => {\r\n        withDB(async (db) => {\r\n            const studentName = req.params.student;\r\n            const studentInfo = await db.collection('studentProfile').findOne({name: studentName});\r\n            const oldValue = studentInfo.isGrad\r\n            const newValue = !oldValue\r\n            await db.collection('studentProfile').updateOne({name: studentName}, {\r\n                '$set': {\r\n                    isGrad: newValue,\r\n                },\r\n            });\r\n            const updatednewField = await db.collection('studentProfile').findOne({name: studentName});\r\n\r\n        res.status(200).json(updatednewField);\r\n        }, res);\r\n});\r\n//post example to update admin school given admin name\r\napp.post('/api/adminProfile/:admin/edit/school/:value', async(req, res) => {\r\n        withDB(async (db) => {\r\n            const adminName = req.params.admin;\r\n            const newValue = req.params.value;\r\n\r\n            await db.collection('adminProfile').updateOne({name: adminName}, {\r\n                '$set': {\r\n                    school: newValue,\r\n                },\r\n            });\r\n            const updatednewField = await db.collection('adminProfile').findOne({name: adminName});\r\n\r\n        res.status(200).json(updatednewField);\r\n        }, res);\r\n});\r\n//post example to add a language skill given student name\r\n// app.post('/api/studentProfile/:student/add/experience/language', async(req, res) => {\r\n//         const languages = req.body;\r\n//         withDB(async (db) => {\r\n//             const studentName = req.params.student;\r\n//             const studentInfo = await db.collection('studentProfile').findOne({name: studentName});\r\n//             await db.collection('studentProfile').updateOne({name: studentName}, {\r\n//                 '$set': {\r\n//                     experience : {language: studentInfo.experience.language.concat(languages)},\r\n//                 },\r\n//             });\r\n//             const updatedStudentInfo = await db.collection('studentProfile').findOne({name: studentName});\r\n//             res.status(200).json(updatedStudentInfo);\r\n//         }, res);\r\n//\r\n// });\r\n\r\n//get example on research opportunity\r\n// app.get('/api/research/:professor', async (req, res) =>\r\n// {\r\n//     try {\r\n//         const schoolName = req.params.professor;\r\n//         console.log(schoolName)\r\n//         const client = await MongoClient.connect('mongodb+srv://aareva2:Lincoln1233@cluster0.gudfj.mongodb.net/ResearchU?retryWrites=true&w=majority');\r\n//         const db = client.db('ResearchU')\r\n//\r\n//         // console.log(client)\r\n//         const schoolInfo = await db.collection('research').findOne({professor: schoolName});\r\n//         console.log(schoolInfo)\r\n//         res.status(200).json(schoolInfo);\r\n//\r\n//         client.close()\r\n//     } catch(error){\r\n//         res.status(500).json({message: \"Error connnecting to db\", error});\r\n//     }\r\n// });\r\n\r\n\r\n\r\n// useEffect(() => {\r\n//     const fetchData = async () => {\r\n//         const result = await fetch('http://localhost:8000/api/research/Fossati');\r\n//         const body = await result.json();\r\n//     }\r\n// })\r\n\r\napp.listen(8000, () => console.log('Listening on port 8000'));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1635283568992
  }
}